{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/robot3/machine.js","../../node_modules/robot3/debug.js","../../node_modules/uint8-to-base64/esm/index.js","../../src/lib/PatchMachines.js","../../src/lib/WebUSB.js","../../src/lib/params.js","../../node_modules/svelte/store/index.mjs","../../src/lib/MachineStore.js","../../src/lib/PlinkyMachine.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.32.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","function valueEnumerable(value) {\n  return { enumerable: true, value };\n}\n\nfunction valueEnumerableWritable(value) {\n  return { enumerable: true, writable: true, value };\n}\n\nexport let d = {};\nlet truthy = () => true;\nlet empty = () => ({});\nlet identity = a => a;\nlet callBoth = (par, fn, self, args) => par.apply(self, args) && fn.apply(self, args);\nlet callForward = (par, fn, self, [a, b]) => fn.call(self, par.call(self, a, b), b);\nlet create = (a, b) => Object.freeze(Object.create(a, b));\n\nfunction stack(fns, def, caller) {\n  return fns.reduce((par, fn) => {\n    return function(...args) {\n      return caller(par, fn, this, args);\n    };\n  }, def);\n}\n\nfunction fnType(fn) {\n  return create(this, { fn: valueEnumerable(fn) });\n}\n\nlet reduceType = {};\nexport let reduce = fnType.bind(reduceType);\nexport let action = fn => reduce((ctx, ev) => !!~fn(ctx, ev) && ctx);\n\nlet guardType = {};\nexport let guard = fnType.bind(guardType);\n\nfunction filter(Type, arr) {\n  return arr.filter(value => Type.isPrototypeOf(value));\n}\n\nfunction makeTransition(from, to, ...args) {\n  let guards = stack(filter(guardType, args).map(t => t.fn), truthy, callBoth);\n  let reducers = stack(filter(reduceType, args).map(t => t.fn), identity, callForward);\n  return create(this, {\n    from: valueEnumerable(from),\n    to: valueEnumerable(to),\n    guards: valueEnumerable(guards),\n    reducers: valueEnumerable(reducers)\n  });\n}\n\nlet transitionType = {};\nlet immediateType = {};\nexport let transition = makeTransition.bind(transitionType);\nexport let immediate = makeTransition.bind(immediateType, null);\n\nfunction enterImmediate(machine, service, event) {\n  return transitionTo(service, machine, event, this.immediates) || machine;\n}\n\nfunction transitionsToMap(transitions) {\n  let m = new Map();\n  for(let t of transitions) {\n    if(!m.has(t.from)) m.set(t.from, []);\n    m.get(t.from).push(t);\n  }\n  return m;\n}\n\nlet stateType = { enter: identity };\nexport function state(...args) {\n  let transitions = filter(transitionType, args);\n  let immediates = filter(immediateType, args);\n  let desc = {\n    final: valueEnumerable(args.length === 0),\n    transitions: valueEnumerable(transitionsToMap(transitions))\n  };\n  if(immediates.length) {\n    desc.immediates = valueEnumerable(immediates);\n    desc.enter = valueEnumerable(enterImmediate);\n  }\n  return create(stateType, desc);\n}\n\nlet invokePromiseType = {\n  enter(machine, service, event) {\n    this.fn.call(service, service.context, event)\n      .then(data => service.send({ type: 'done', data }))\n      .catch(error => service.send({ type: 'error', error }));\n    return machine;\n  }\n};\nlet invokeMachineType = {\n  enter(machine, service, event) {\n    service.child = interpret(this.machine, s => {\n      service.onChange(s);\n      if(service.child == s && s.machine.state.value.final) {\n        delete service.child;\n        service.send({ type: 'done', data: s.context });\n      }\n    }, service.context, event);\n    if(service.child.machine.state.value.final) {\n      let data = service.child.context;\n      delete service.child;\n      return transitionTo(service, machine, { type: 'done', data }, this.transitions.get('done'));\n    }\n    return machine;\n  }\n};\nexport function invoke(fn, ...transitions) {\n  let t = valueEnumerable(transitionsToMap(transitions));\n  return machine.isPrototypeOf(fn) ?\n    create(invokeMachineType, {\n      machine: valueEnumerable(fn),\n      transitions: t\n    }) :\n    create(invokePromiseType, {\n      fn: valueEnumerable(fn),\n      transitions: t\n    });\n}\n\nlet machine = {\n  get state() {\n    return {\n      name: this.current,\n      value: this.states[this.current]\n    };\n  }\n};\n\nexport function createMachine(current, states, contextFn = empty) {\n  if(typeof current !== 'string') {\n    contextFn = states || empty;\n    states = current;\n    current = Object.keys(states)[0];\n  }\n  if(d._create) d._create(current, states);\n  return create(machine, {\n    context: valueEnumerable(contextFn),\n    current: valueEnumerable(current),\n    states: valueEnumerable(states)\n  });\n}\n\nfunction transitionTo(service, machine, fromEvent, candidates) {\n  let { context } = service;\n  for(let { to, guards, reducers } of candidates) {  \n    if(guards(context, fromEvent)) {\n      service.context = reducers.call(service, context, fromEvent);\n\n      let original = machine.original || machine;\n      let newMachine = create(original, {\n        current: valueEnumerable(to),\n        original: { value: original }\n      });\n\n      let state = newMachine.state.value;\n      return state.enter(newMachine, service, fromEvent);\n    }\n  }\n}\n\nfunction send(service, event) {\n  let eventName = event.type || event;\n  let { machine } = service;\n  let { value: state } = machine.state;\n  \n  if(state.transitions.has(eventName)) {\n    return transitionTo(service, machine, event, state.transitions.get(eventName)) || machine;\n  }\n  return machine;\n}\n\nlet service = {\n  send(event) {\n    this.machine = send(this, event);\n    \n    // TODO detect change\n    this.onChange(this);\n  }\n};\n\nexport function interpret(machine, onChange, initialContext, event) {\n  let s = Object.create(service, {\n    machine: valueEnumerableWritable(machine),\n    context: valueEnumerableWritable(machine.context(initialContext, event)),\n    onChange: valueEnumerable(onChange)\n  });\n  s.send = s.send.bind(s);\n  s.machine = s.machine.state.value.enter(s.machine, s, event);\n  return s;\n} \n","import { d } from './machine.js';\n\nfunction unknownState(from, state) {\n  throw new Error(`Cannot transition from ${from} to unknown state: ${state}`);\n}\n\nd._create = function(current, states) {\n  if(!(current in states)) {\n    throw new Error(`Initial state [${current}] is not a known state.`);\n  }\n  for(let p in states) {\n    let state = states[p];\n    for(let [, candidates] of state.transitions) {\n      for(let {to} of candidates) {\n        if(!(to in states)) {\n          unknownState(p, to);\n        }\n      }\n    }\n  }\n};\n","const {fromCharCode} = String;\n\nexport const encode = uint8array => {\n  const output = [];\n  for (let i = 0, {length} = uint8array; i < length; i++)\n    output.push(fromCharCode(uint8array[i]));\n  return btoa(output.join(''));\n}\n\nconst asCharCode = c => c.charCodeAt(0);\n\nexport const decode = chars => Uint8Array.from(atob(chars), asCharCode);\n","import {\n  action,\n  createMachine,\n  state as final,\n  guard,\n  immediate,\n  interpret,\n  invoke,\n  reduce,\n  state,\n  transition,\n} from 'robot3';\n\n// ██╗      ██████╗  █████╗ ██████╗ \n// ██║     ██╔═══██╗██╔══██╗██╔══██╗\n// ██║     ██║   ██║███████║██║  ██║\n// ██║     ██║   ██║██╔══██║██║  ██║\n// ███████╗╚██████╔╝██║  ██║██████╔╝\n// ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═════╝ \n\nfunction getHeader(ctx, ev) {\n  const data = new Uint8Array(ev.data);\n  // Keep all results in an array until the end, when we can concat them all into a single ArrayBuffer\n  ctx.result = [];\n  // Set the header\n  ctx.header = data;\n  // Slot to load from is in 5th index\n  ctx.slot = data[5];\n  // We're going to be counting how many bytes we have read to know when to stop\n  ctx.processedBytes = 0;\n  // Header contains how many bytes are going to be sent\n  ctx.bytesToProcess = data[8]+data[9]*256;\n  console.log(`Loading from slot: ${ctx.slot} - Expecting ${ctx.bytesToProcess} bytes (header: ${ctx.header})`);\n  return ctx;\n}\n\nfunction hasHeader(ctx, ev) {\n  console.log('hasHeader', ctx, ev);\n  const data = new Uint8Array(ev.data);\n  if(!data) return false;\n  if(data.byteLength !== 10) return false;\n  if (data[0]!==0xf3) return false;\n  if (data[1]!==0x0f) return false;\n  if (data[2]!==0xab) return false;\n  if (data[3]!==0xca) return false;\n  if (data[4]!==1) return false;\n  if (data[6]!==0) return false;\n  if (data[7]!==0) return false;\n  return true;\n}\n\nfunction readBytes(ctx, ev) {\n  const data = new Uint8Array(ev.data);\n  ctx.result.push(data);\n  ctx.processedBytes += data.byteLength;\n  return ctx;\n}\n\nfunction hasMoreData(ctx) {\n  return ctx.processedBytes >= ctx.bytesToProcess;\n}\n\nasync function sendLoadRequest(ctx) {\n  console.log('sendLoadRequest', ctx.port, 'patchNumber', ctx.patchNumber);\n  // [0xf3,0x0f,0xab,0xca,  0,   32,             0,0,0,0 ]\n  //  header                get  current preset  padding ]\n  const buf = new Uint8Array([0xf3,0x0f,0xab,0xca,0,ctx.patchNumber,0,0,0,0]);\n  ctx.port.send(buf);\n  return true;\n}\n\nexport const PatchLoadMachine = {\n  idle: state(\n    immediate('getHeader', action(sendLoadRequest)),\n  ),\n  getHeader: state(\n    transition('data', 'header', guard(hasHeader)),\n  ),\n  header: state(\n    immediate('read', reduce(getHeader))\n  ),\n  read: state(\n    immediate('finished', guard(hasMoreData)),\n    transition('data', 'read', reduce(readBytes)),\n  ),\n  finished: final()\n};\n\n// ███████╗ █████╗ ██╗   ██╗███████╗\n// ██╔════╝██╔══██╗██║   ██║██╔════╝\n// ███████╗███████║██║   ██║█████╗  \n// ╚════██║██╔══██║╚██╗ ██╔╝██╔══╝  \n// ███████║██║  ██║ ╚████╔╝ ███████╗\n// ╚══════╝╚═╝  ╚═╝  ╚═══╝  ╚══════╝\n\nasync function sendWriteRequest(ctx) {\n  console.log('sendWriteRequest', ctx.port, 'patchNumber', ctx.patchNumber);\n  // [0xf3,0x0f,0xab,0xca,  1,   32,             0,0,0,0 ]\n  //  header                set  current preset  padding ]\n  //(header: 243,15,171,202,1,9,0,0,16,6)\n  let arr = new ArrayBuffer(4); // an Int32 takes 4 bytes\n  let view = new DataView(arr);\n  view.setUint32(0, ctx.bytesToProcess, true);\n  const len = new Uint8Array(arr);\n  const buf = new Uint8Array([0xf3,0x0f,0xab,0xca,1,ctx.patchNumber,0,0,len[0],len[1]]);\n  console.log('sending buf', buf, \"ctx.bytesToProcess\", ctx.bytesToProcess, \"len.byteLength\", len.byteLength, \"len\", len);\n  //ctx.port.send(buf);\n  return true;\n}\n\nasync function sendBytes(ctx, ev) {\n  const data = new Uint8Array(ctx.data.slice());\n  ctx.port.send(data);\n  //ctx.result.push(data);\n  ctx.processedBytes += data.byteLength;\n  return ctx;\n}\n\nexport const PatchSaveMachine = {\n  idle: state(\n    immediate('setHeader', reduce(ctx => {\n      const data = new Uint8Array(ctx.patch);\n      console.log('ctx', ctx, data.byteLength);\n      return { ...ctx, processedBytes: 0, bytesToProcess: data.byteLength, data } \n    })),\n  ),\n  setHeader: state(\n    immediate('write', action(sendWriteRequest))\n  ),\n  getDataFromPatch: state(\n    immediate('write', reduce((ctx) => {\n      return { ...ctx };\n    }))\n  ),\n  write: state(\n    immediate('finished', guard(hasMoreData)),\n    immediate('getDataFromPatch', action(sendBytes)),\n  ),\n  finished: final()\n}\n","/**\n * WebUSB port\n */\nexport class Port extends EventTarget {\n\n  constructor(device) {\n    super();\n    this.device = device;\n    this.interfaceNumber = 0;\n    this.endpointIn = 0;\n    this.endpointOut = 0;\n    this.queue = [];\n    this.transferInflight = false\n    //this.startQueue();\n  }\n\n  onReceive(data) {}\n  onReceiveError(error) {}\n\n  setEndpoints() {\n\n    // Go through all the interfaces in this device configuration.\n    let interfaces = this.device.configuration.interfaces;\n\n    console.log(\"Interfaces\", this.device.configuration.interfaces);\n\n    interfaces.forEach(element => {\n      \n      console.log(\"Element\", element);\n\n      // Element alternates - these are the *real* elements\n      // that we want to connect to.\n      element.alternates.forEach(elementalt => {\n\n      if (elementalt.interfaceClass==0xFF) {\n\n        this.interfaceNumber = element.interfaceNumber;\n\n        // Alternates have endpoints, that we then attach to\n        // so we can communicate with the device through\n        // a shared pointer.\n        elementalt.endpoints.forEach(elementendpoint => {\n\n          if (elementendpoint.direction == \"out\") {\n            this.endpointOut = elementendpoint.endpointNumber;\n          }\n\n          if (elementendpoint.direction==\"in\") {\n            this.endpointIn = elementendpoint.endpointNumber;\n          }\n\n        });\n\n      }\n\n    })});\n\n    if(this.endpointIn === 0) { console.error('endpointIn is 0') };\n    if(this.endpointOut === 0) { console.error('endpointOut is 0') };\n\n  }\n\n  async connect() {\n\n    let readLoop = async () => {\n      try {\n        const result = await this.device.transferIn(this.endpointIn, 64)\n        this.onReceive(result.data);\n        readLoop();\n      }\n      catch(error) {\n        this.onReceiveError(error);\n      }\n    };\n\n    try {\n\n      // Open the WebUSB device connection\n      await this.device.open();\n\n      // Select the passe configuration to that device\n      // It is 1 as we are only interested in the first one.\n      // We are only connecting to one device here.\n      if (this.device.configuration === null) {\n        return this.device.selectConfiguration(1);\n      }\n\n      // Set the endpoint for that device.\n      await this.setEndpoints();\n\n      console.log(\"Interface number:\", this.interfaceNumber);\n      console.log(\"Configuration:\", this.device.configuration);\n\n      // Claim the interface to be in use by this app.\n      await this.device.claimInterface(this.interfaceNumber);\n\n      try {\n        // ??? leftover?\n        await this.device.selectAlternateInterface(this.interfaceNumber, this.endpointIn);\n      }\n      catch(err) {\n        //console.error('BOO!!! this.device.selectAlternateInterface() failed');\n      }\n\n      await this.device.controlTransferOut({\n          'requestType': 'class',\n          'recipient': 'interface',\n          'request': 0x22,\n          'value': 0x01,\n          'index': this.interfaceNumber});\n\n      // Start the read loop defined above\n      readLoop();\n      \n    }\n    catch(error) {\n      console.error(error);\n      throw error;\n    }\n\n  }\n\n  async disconnect() {\n    return this.device.controlTransferOut({\n        'requestType': 'class',\n        'recipient': 'interface',\n        'request': 0x22,\n        'value': 0x00,\n        'index': this.interfaceNumber})\n    .then(() => this.device.close());\n  };\n\n  send(data) {\n    console.log('sending', data, this.endpointOut);\n    return this.device.transferOut(this.endpointOut, data);\n  };\n  \n  queueMessage (data) {\n    if (queue.length > 5000) return console.warn('You have queued too many messages, have more chill')\n    this.queue.push(data);\n  }\n  \n  async processQueue () {\n    // bounce if there's nothing left to do\n    if (this.queue.length === 0) return;\n    // bounce if we're already sending something and it hasn't been accepted yet\n    if (this.transferInflight) return;\n    \n    this.transferInflight = true\n    \n    const data = this.queue.shift();\n    try {\n      await this.send(data)\n    } catch (e) {\n      console.error(e)\n      this.queue.unshift(data) // naive retry.\n    }\n    \n    this.transferInflight = false\n  }\n  \n  startQueue () {\n    this.stopQueue()\n    this.queueInterval = setInterval(this.processQueue.bind(this), 1);\n  }\n  \n  stopQueue () {\n    if (this.queueInterval) clearInterval(this.queueInterval)\n  }\n\n}\n\nexport class Serial {\n\n  constructor() {\n  }\n\n  static async getPorts(constructor) {\n    return navigator.usb.getDevices().then(devices => {\n      return devices.map(device => constructor ? new constructor(device) : new Port(device));\n    });\n  };\n\n  static async requestPort(constructor) {\n    const filters = [\n      { 'vendorId': 0x239A }, // Adafruit boards\n      { 'vendorId': 0xcafe }, // TinyUSB example\n    ];\n    return navigator.usb.requestDevice({ 'filters': filters }).then(\n      device => new constructor ? new constructor(device) : new Port(device)\n    );\n  }\n\n}\n","// This is a list of the params coming from Plinky\", in this order.\n// The order is therefore important. It is from params_new.h in the Plinky fw.\n// It is used to translate the TypedArray that we get from the device into JSON.\nexport const EParams = [\n  \"P_PWM\",\n  \"P_DRIVE\",\n  \"P_PITCH\",\n  \"P_OCT\",\n  \"P_GLIDE\",\n  \"P_INTERVAL\",\n  \"P_NOISE\",\n  \"P_MIXRESO\",\n  \"P_ROTATE\",\n  \"P_SCALE\",\n  \"P_MICROTUNE\",\n  \"P_STRIDE\",\n  \"P_SENS\",\n  \"P_A\",\n  \"P_D\",\n  \"P_S\",\n  \"P_R\",\n  \"P_ENV1_UNUSED\",\n  \"P_ENV_LEVEL1\",\n  \"P_A2\",\n  \"P_D2\",\n  \"P_S2\",\n  \"P_R2\",\n  \"P_ENV2_UNUSED\",\n  \"P_DLSEND\",\n  \"P_DLTIME\",\n  \"P_DLRATIO\",\n  \"P_DLWOB\",\n  \"P_DLFB\",\n  \"P_TEMPO\",\n  \"P_RVSEND\",\n  \"P_RVTIME\",\n  \"P_RVSHIM\",\n  \"P_RVWOB\",\n  \"P_RVUNUSED\",\n  \"P_SWING\",\n  \"P_ARPONOFF\",\n  \"P_ARPMODE\",\n  \"P_ARPDIV\",\n  \"P_ARPPROB\",\n  \"P_ARPLEN\",\n  \"P_ARPOCT\",\n  \"P_LATCHONOFF\",\n  \"P_SEQMODE\",\n  \"P_SEQDIV\",\n  \"P_SEQPROB\",\n  \"P_SEQLEN\",\n  \"P_GATE_LENGTH\",\n  \"P_SMP_POS\",\n  \"P_SMP_GRAINSIZE\",\n  \"P_SMP_RATE\",\n  \"P_SMP_TIME\",\n  \"P_SAMPLE\",\n  \"P_SEQPAT\",\n  \"P_JIT_POS\",\n  \"P_JIT_GRAINSIZE\",\n  \"P_JIT_RATE\",\n  \"P_JIT_PULSE\",\n  \"P_JIT_UNUSED\",\n  \"P_SEQSTEP\",\n  \"P_ASCALE\",\n  \"P_AOFFSET\",\n  \"P_ADEPTH\",\n  \"P_AFREQ\",\n  \"P_ASHAPE\",\n  \"P_AWARP\",\n  \"P_BSCALE\",\n  \"P_BOFFSET\",\n  \"P_BDEPTH\",\n  \"P_BFREQ\",\n  \"P_BSHAPE\",\n  \"P_BWARP\",\n  \"P_XSCALE\",\n  \"P_XOFFSET\",\n  \"P_XDEPTH\",\n  \"P_XFREQ\",\n  \"P_XSHAPE\",\n  \"P_XWARP\",\n  \"P_YSCALE\",\n  \"P_YOFFSET\",\n  \"P_YDEPTH\",\n  \"P_YFREQ\",\n  \"P_YSHAPE\",\n  \"P_YWARP\",\n  \"P_MIXSYNTH\",\n  \"P_MIXWETDRY\",\n  \"P_MIXHPF\",\n  \"P_MIX_UNUSED\",\n  \"P_CV_QUANT\",\n  \"P_HEADPHONE\",\n  \"P_MIXINPUT\",\n  \"P_MIXINWETDRY\",\n  \"P_SYS_UNUSED1\",\n  \"P_SYS_UNUSED2\",\n  \"P_SYS_UNUSED3\",\n  \"P_ACCEL_SENS\",\n];\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { interpret } from 'robot3';\nimport { writable } from 'svelte/store';\n\n/**\n * Wrap an FSM in a Svelte store\n * @param {Machine} machine - Robot3 state machine\n * @param {any} initialContext - Initial context for machine\n * @returns {[Writable<any>, function, Service<any>]}\n */\nexport const MachineStore = (\n  machine,\n  initialContext\n) => {\n  const service = interpret(\n    machine,\n    _service => {\n      if(service === _service) {\n        console.log('[MachineStore] state', _service.machine.current, 'context', _service.context);\n        store.set({ state: _service.machine.current, context: _service.context });\n      }\n    },\n    initialContext,\n  );\n\n  const store = writable({\n    state: machine.current,\n    context: service.context,\n  });\n\n  const send = service.send;\n\n  return { store, send, service };\n};\n","import { PatchLoadMachine, PatchSaveMachine } from './PatchMachines';\nimport { Port, Serial } from './WebUSB';\nimport {\n  action,\n  createMachine,\n  guard,\n  immediate,\n  interpret,\n  invoke,\n  reduce,\n  state,\n  transition,\n} from 'robot3';\n\nimport { EParams } from './params';\nimport { MachineStore } from './MachineStore';\n\nconst patchLoadMachine = createMachine(PatchLoadMachine, (ctx) => ({ ...ctx }));\nconst patchSaveMachine = createMachine(PatchSaveMachine, (ctx) => ({ ...ctx }));\n\n// ██████╗  ██████╗ ██████╗ ████████╗\n// ██╔══██╗██╔═══██╗██╔══██╗╚══██╔══╝\n// ██████╔╝██║   ██║██████╔╝   ██║   \n// ██╔═══╝ ██║   ██║██╔══██╗   ██║   \n// ██║     ╚██████╔╝██║  ██║   ██║   \n// ╚═╝      ╚═════╝ ╚═╝  ╚═╝   ╚═╝   \n\nexport class WebUSBPlinky extends Port {\n\n  onReceive(data) {\n    console.log('Port data:', data.buffer);\n    const { service } = PlinkyMachine;\n    if(service.child) {\n      service.child.send({\n        type: 'data',\n        data: data.buffer\n      });\n    }\n    else {\n      service.send({\n        type: 'data',\n        data: data.buffer\n      });\n    }\n  }\n\n  onReceiveError(error) {\n    console.error('Port error:', error);\n    const { send } = PlinkyMachine;\n    send({\n      type: 'error',\n      data: error\n    });\n  }\n\n}\n\n// ██████╗  █████╗ ████████╗ ██████╗██╗  ██╗    ████████╗ ██████╗          ██╗███████╗ ██████╗ ███╗   ██╗\n// ██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██║  ██║    ╚══██╔══╝██╔═══██╗         ██║██╔════╝██╔═══██╗████╗  ██║\n// ██████╔╝███████║   ██║   ██║     ███████║       ██║   ██║   ██║         ██║███████╗██║   ██║██╔██╗ ██║\n// ██╔═══╝ ██╔══██║   ██║   ██║     ██╔══██║       ██║   ██║   ██║    ██   ██║╚════██║██║   ██║██║╚██╗██║\n// ██║     ██║  ██║   ██║   ╚██████╗██║  ██║       ██║   ╚██████╔╝    ╚█████╔╝███████║╚██████╔╝██║ ╚████║\n// ╚═╝     ╚═╝  ╚═╝   ╚═╝    ╚═════╝╚═╝  ╚═╝       ╚═╝    ╚═════╝      ╚════╝ ╚══════╝ ╚═════╝ ╚═╝  ╚═══╝\n\nfunction parseJSONFromPatch(patch) {\n  let patchJSON = {\n    arp: false,\n    latch: false,\n    loopStart: 0,\n    loopLength: 8,\n    params: [],\n  };\n  // each parameter has 16 bytes;\n  // first 2 bytes are the value, then the 7 mod matrix amounts\n  EParams.forEach((param, index) => {\n    // We have 16 bytes that we're looking at\n    const len = 16;\n    // Index to start slicing at\n    const idx = index * len;\n    // We have 16 bytes in the ArrayBuffer that we want\n    const buf = patch.slice(idx, len*index+len);\n    // Then convert it to an Int16Array to get range of -1024 to 1024\n    // without having to do messy bit operations by hand! woot!\n    const arr = new Int16Array(buf);\n    //console.log(param, len, idx, \"BUF\", buf, arr);\n    patchJSON.params.push({\n      name: param,\n      buffer:     buf,\n      value:      arr[0],\n      enum:       null,\n      mods: {\n        env:      arr[1],\n        pressure: arr[2],\n        a:        arr[3],\n        b:        arr[4],\n        x:        arr[5],\n        y:        arr[6],\n        random:   arr[7],\n      }\n    });\n  });\n\n  //\n  // Go through the bitfield in the last 16 bytes to set flags\n  //\n  // u8 flags;\n  // - if flags & 1 is true, then arp is on\n  // - if flags & 2 is true, then latch is on\n  // s8 loopstart_step_no_offset;\n  // - 0-63 which step the pattern starts on in the current pattern (normally 0)\n  // s8 looplen_step;\n  // - how long the pattern is, (normally 8)\n  // u8 paddy[16-3];\n  // - reserved for future use\n  //\n\n  const field = patch.slice(patch.byteLength-16, patch.byteLength);\n  patchJSON.arp        = (new Uint8Array(field)[0] & 1) > 0;\n  patchJSON.latch      = (new Uint8Array(field)[0] & 2) > 0;\n  patchJSON.loopStart  = new Int8Array(field)[1];\n  patchJSON.loopLength = new Int8Array(field)[2];\n\n  console.log('bitfield', field, patchJSON);\n\n  return patchJSON;\n}\n\nasync function connect(ctx) {\n  ctx.port = await Serial.requestPort(WebUSBPlinky);\n  await ctx.port.connect();\n  return ctx;\n}\n\n// ███╗   ███╗ █████╗  ██████╗██╗  ██╗██╗███╗   ██╗███████╗\n// ████╗ ████║██╔══██╗██╔════╝██║  ██║██║████╗  ██║██╔════╝\n// ██╔████╔██║███████║██║     ███████║██║██╔██╗ ██║█████╗  \n// ██║╚██╔╝██║██╔══██║██║     ██╔══██║██║██║╚██╗██║██╔══╝  \n// ██║ ╚═╝ ██║██║  ██║╚██████╗██║  ██║██║██║ ╚████║███████╗\n// ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝╚══════╝\n\nexport function createPlinkyMachine(initialContext = {}) {\n\n  const states = {\n    disconnected: state(\n      transition('connect', 'connecting'),\n      transition('parsePatch', 'disconnected', reduce((ctx, ev) => {\n        console.log('foo', ev, ctx);\n        if(ev.patch) {\n          const patch = ev.patch;\n          const arrayBuffer = patch.buffer.slice(patch.byteOffset, patch.byteLength + patch.byteOffset);\n          const patchJSON = parseJSONFromPatch(arrayBuffer);\n          return { ...ctx, patchJSON, patch: arrayBuffer }\n        }\n        return { ...ctx };\n      }))\n    ),\n    connecting: invoke(\n      connect,\n      transition('done', 'connected'),\n      transition('error', 'error', reduce((ctx, ev) => {\n        console.log(ev.error);\n        return { ...ctx, error: ev.error };\n      }))\n    ),\n    connected: state(\n      transition('loadPatch', 'loadPatch', reduce((ctx, ev) => {\n        console.log('ctx', ctx, ev);\n        return { ...ctx, patchNumber: ev.patchNumber };\n      })),\n      transition('savePatch', 'savePatch'),\n      transition('clearPatch', 'clearPatch'),\n    ),\n    clearPatch: state(\n      immediate('connected', reduce((ctx) => {\n        ctx.patch = null;\n        ctx.patchJSON = {};\n        return { ...ctx }\n      }))\n    ),\n    loadPatch: invoke(\n      patchLoadMachine,\n      transition('done', 'connected', reduce((ctx, ev) => {\n        const patch = Uint8Array.from(Array.prototype.concat(...ev.data.result.map(a => Array.from(a))));\n        const arrayBuffer = patch.buffer.slice(patch.byteOffset, patch.byteLength + patch.byteOffset);\n        const patchJSON = parseJSONFromPatch(arrayBuffer);\n        return { ...ctx, patch: arrayBuffer, patchJSON };\n      })),\n      transition('error', 'error', reduce((ctx, ev) => {\n        return { ...ctx, error: ev.error };\n      }))\n    ),\n    savePatch: invoke(\n      patchSaveMachine,\n      transition('done', 'connected'),\n      transition('error', 'error', reduce((ctx, ev) => {\n        return { ...ctx, error: ev.error };\n      }))\n    ),\n    error: state(\n      transition('connect', 'connecting', reduce(ctx => {\n        ctx.error = null;\n        return { ...ctx };\n      })),\n    )\n  };\n\n  const context = (ctx) => {\n    return { ...ctx };\n  };\n\n  const machine = createMachine(states, context);\n\n  return MachineStore(machine, Object.assign(initialContext, {\n    port: null,\n    patch: null,\n    patchJSON: {}\n  }));\n}\n\n// ███████╗██╗███╗   ██╗ ██████╗ ██╗     ███████╗████████╗ ██████╗ ███╗   ██╗\n// ██╔════╝██║████╗  ██║██╔════╝ ██║     ██╔════╝╚══██╔══╝██╔═══██╗████╗  ██║\n// ███████╗██║██╔██╗ ██║██║  ███╗██║     █████╗     ██║   ██║   ██║██╔██╗ ██║\n// ╚════██║██║██║╚██╗██║██║   ██║██║     ██╔══╝     ██║   ██║   ██║██║╚██╗██║\n// ███████║██║██║ ╚████║╚██████╔╝███████╗███████╗   ██║   ╚██████╔╝██║ ╚████║\n// ╚══════╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝╚══════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═══╝\n\nexport const PlinkyMachine = createPlinkyMachine({\n  patchNumber: 0,\n});","<script>\n\n\timport 'robot3/debug';\n\timport { encode, decode } from 'uint8-to-base64';\n\timport { onMount } from \"svelte\";\n\timport { PlinkyMachine } from './lib/PlinkyMachine';\n\n\tlet port;\n\tlet inref;\n\tlet inarrbufref;\n\tlet outref;\n\n\tconst { store, send, service } = PlinkyMachine;\n\n\tfunction compress(input) {\n\t\treturn input.split('').reduce((o, c) => {\n\t\t\tif (o[o.length - 2] === c && o[o.length - 1] < 35) o[o.length - 1]++;\n\t\t\telse o.push(c, 0);\n\t\t\treturn o;\n\t\t},[]).map(_ => typeof _ === 'number' ? _.toString(36) : _).join('');\n\t}\n\n\tfunction decompress(input) {\n\t\treturn input.split('').map((c,i,a)=>i%2?undefined:new Array(2+parseInt(a[i+1],36)).join(c)).join('');\n\t}\n\n\tonMount(() => {\n\t\tlet params = (new URL(document.location)).searchParams;\n\t\tlet patch = params.get(\"p\");\n\t\tif(patch) {\n\t\t\tconst decodedPatch = decode(decompress(decodeURIComponent(patch)));\n\t\t\tconsole.log('patch: ', patch, decodedPatch);\n\t\t\tsend({\n\t\t\t\ttype: 'parsePatch',\n\t\t\t\tpatch: decodedPatch\n\t\t\t});\n\t\t}\n\t});\n\n\tasync function connect() {\n\t\tsend('connect');\n\t}\n\n\tfunction loadPatch() {\n\t\tsend({\n\t\t\ttype: 'loadPatch',\n\t\t\tpatchNumber: $store.context.patchNumber\n\t\t});\n\t}\n\n\tfunction savePatch() {\n\t\tsend({\n\t\t\ttype: 'savePatch',\n\t\t\tpatchNumber: $store.context.patchNumber\n\t\t});\n\t}\n\n\tfunction clearPatch() {\n\t\tconst uri = window.location.toString();\n\t\tif (uri.indexOf(\"?\") > 0) {\n\t\t\twindow.history.replaceState({}, document.title, uri.substring(0, uri.indexOf(\"?\")));\n\t\t}\n\t\tsend({\n\t\t\ttype: 'clearPatch'\n\t\t});\n\t}\n\n\tconst paramMin = -100;\n\tconst paramMax = 100;\n\tconst xMin = -1024;\n\tconst xMax = 1024;\n\n\tfunction normalise(x) {\n\t\treturn (paramMax - paramMin) * ((x-xMin)/(xMax - xMin)) + paramMin;\n\t}\n\n\t$: connected = ['connected', 'loadPatch', 'savePatch'].indexOf($store.state) > -1;\n\t$: disabled = ['loadPatch', 'savePatch'].indexOf($store.state) > -1;\n\t$: error = ['error'].indexOf($store.state) > -1;\n\n\t$: linkUrl = location.protocol+'//'+location.host+location.pathname+'?p='+encodeURIComponent(compress(encode(new Uint8Array($store.context.patch))));\n\n\tfunction round(num) {\n\t\treturn Math.round( num * 100 + Number.EPSILON ) / 100;\n\t}\n\n</script>\n\n<main>\n\t<h1>Plinky WebUSB playground</h1>\n\t<h2>Current state: {$store.state}</h2>\n\n\t{#if error}\n\t\t<p class=\"error\">{$store.context.error}</p>\n\t{/if}\n\n\t{#if !connected}\n\t\t<p>You need the 0.9l firmware (or newer) to use this!<br><a href=\"https://plinkysynth.com/firmware\">Download here!</a></p>\n\t{/if}\n\n\t<button style=\"display: {!connected ? 'block' : 'none'}\" on:click={connect}>Connect</button>\n\n\t<div style=\"display: {connected ? 'block' : 'none'}\">\n\t\t<label for=\"i-patch-number\">Patch number</label>\n\t\t<input type=\"number\" disabled={disabled} id=\"i-patch-number\" bind:value={$store.context.patchNumber} />\n\t\t<button disabled={disabled} on:click={loadPatch}>Load patch</button>\n\t\t<button disabled={disabled} on:click={savePatch}>Save patch</button>\n\t</div>\n\n\t<h2>Current patch</h2>\n\n\t{#if $store.context.patch}\n\n\t\t<button on:click|preventDefault={clearPatch}>Clear patch in browser memory</button>\n\n\t\t<p>Loaded: {$store.context.patch.byteLength} bytes</p>\n\t\t\n\t\t<h3>Link to patch</h3>\n\t\t<label for=\"i-link-url\">Link:</label>\n\t\t<input value={linkUrl} id=\"i-link-url\">\n\n\t\t<h3>Params</h3>\n\n\t\t<p>\n\t\t\tArp: {$store.context.patchJSON.arp}<br>\n\t\t\tLatch: {$store.context.patchJSON.latch}<br>\n\t\t\tLoop start: {$store.context.patchJSON.loopStart}<br>\n\t\t\tLoop length: {$store.context.patchJSON.loopLength}<br>\n\t\t</p>\n\n\t\t<ul class=\"params\">\n\t\t\t{#each $store.context.patchJSON.params as param}\n\t\t\t\t<li>\n\t\t\t\t\t<h3>{param.name}</h3>\n\t\t\t\t\t<code>\n\t\t\t\t\t\thex: {Array.from(new Uint8Array(param.buffer)).map(a=> a.toString(16))}<br>\n\t\t\t\t\t\tdec: {new Uint8Array(param.buffer).toString()}\n\t\t\t\t\t</code>\n\t\t\t\t\t<div class=\"mods\">\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Base</td>\n\t\t\t\t\t\t\t\t<td>{round(normalise(param.value))}%<br></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Env</td>\n\t\t\t\t\t\t\t\t<td>{round(normalise(param.mods.env))}%<br></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Pressure</td>\n\t\t\t\t\t\t\t\t<td>{round(normalise(param.mods.pressure))}%<br></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>A</td>\n\t\t\t\t\t\t\t\t<td>{round(normalise(param.mods.a))}%<br></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>B</td>\n\t\t\t\t\t\t\t\t<td>{round(normalise(param.mods.b))}%<br></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>X</td>\n\t\t\t\t\t\t\t\t<td>{round(normalise(param.mods.x))}%<br></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Y</td>\n\t\t\t\t\t\t\t\t<td>{round(normalise(param.mods.y))}%<br></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>Random</td>\n\t\t\t\t\t\t\t\t<td>{round(normalise(param.mods.random))}%<br></td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t{/each}\n\t\t</ul>\n\t{:else}\n\t\t<p>No patch in browser memory</p>\n\t{/if}\n\n</main>\n\n<style>\n\t.params {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr 1fr 1fr;\n\t\tgap: 8px;\n\t\t\n\t\tmargin: 0;\n\t\tlist-style: none;\n\t\tpadding: 0;\n\t}\n\t.params li {\n\t\tborder: 1px solid #ccc;\n\t\tpadding: 0;\n\t}\n\t.params li h3 {\n\t\tbackground: rgb(235, 237, 195);\n\t\tpadding: 8px 16px;\n\t\tmargin: 0;\n\t\tborder-bottom: 1px solid #ccc;\n\t}\n\t.params li .mods {\n\t\tdisplay: grid;\n\t\tpadding: 16px;\n\t\tgrid-template-columns: 1fr 1fr;\n\t}\n\t.params li .mods table {\n\t\twidth: 100%;\n\t}\n\t.params li code {\n\t\tpadding: 16px;\n\t\tbackground: #f3e8f8;\n\t\tdisplay: block;\n\t}\n\t.params li table td {\n\t\tpadding-right: 16px;\n\t\tfont-size: 14px;\n\t\tline-height: 18px;\n\t\tborder-bottom: 1px solid #efefef;\n\t}\n\tmain {\n\t\tpadding: 1em;\n\t\tmargin: 0 auto;\n\t}\n\th1 {\n\t\tmargin-top: 0;\n\t}\n\tbutton {\n\t\tpadding: 6px 12px;\n\t\tmargin: 0;\n\t\tdisplay: inline-block;\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","block","delete","local","m","new_on_destroy","map","filter","mount_component","valueEnumerable","enumerable","valueEnumerableWritable","writable","d","truthy","empty","identity","callBoth","par","self","args","apply","callForward","call","freeze","stack","def","caller","reduce","this","fnType","reduceType","bind","action","ev","guardType","guard","Type","arr","isPrototypeOf","makeTransition","to","guards","t","reducers","transitionType","immediateType","transition","immediate","enterImmediate","machine","service","transitionTo","immediates","transitionsToMap","transitions","set","get","stateType","enter","state","desc","final","invokePromiseType","[object Object]","send","type","catch","error","invokeMachineType","child","interpret","s","onChange","invoke","current","states","createMachine","contextFn","keys","_create","fromEvent","candidates","original","newMachine","eventName","initialContext","unknownState","fromCharCode","String","asCharCode","charCodeAt","hasMoreData","processedBytes","bytesToProcess","PatchLoadMachine","idle","async","console","log","port","patchNumber","buf","Uint8Array","getHeader","byteLength","header","result","slot","read","finished","PatchSaveMachine","patch","setHeader","ArrayBuffer","DataView","setUint32","len","getDataFromPatch","write","slice","Port","EventTarget","device","super","interfaceNumber","endpointIn","endpointOut","queue","transferInflight","interfaces","configuration","alternates","elementalt","interfaceClass","endpoints","elementendpoint","direction","endpointNumber","readLoop","transferIn","onReceive","onReceiveError","open","selectConfiguration","setEndpoints","claimInterface","selectAlternateInterface","err","controlTransferOut","requestType","recipient","request","index","close","transferOut","warn","shift","e","unshift","stopQueue","queueInterval","setInterval","processQueue","clearInterval","EParams","subscriber_queue","MachineStore","_service","start","stop","subscribers","new_value","run_queue","invalidate","subscriber","indexOf","splice","patchLoadMachine","patchSaveMachine","WebUSBPlinky","buffer","PlinkyMachine","parseJSONFromPatch","patchJSON","arp","latch","loopStart","loopLength","params","param","idx","Int16Array","enum","mods","env","pressure","x","y","random","field","Int8Array","connect","constructor","navigator","usb","getDevices","devices","requestDevice","filters","vendorId","requestPort","disconnected","arrayBuffer","byteOffset","connecting","connected","clearPatch","loadPatch","prototype","concat","savePatch","assign","createPlinkyMachine","preventDefault","iterations","detaching","toString","round","num","Math","Number","EPSILON","URL","location","searchParams","decodedPatch","decodeURIComponent","chars","split","undefined","parseInt","join","atob","$store","disabled","linkUrl","protocol","host","pathname","encodeURIComponent","uint8array","output","btoa","encode","o","_","uri","window","history","replaceState","title","substring","destroy_component","$destroy","$$props","obj","$$set","body"],"mappings":"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AKoI,cAAgBC,YAAYrI,KAAKsI,aAAanI,KAAKH,MAAO,GAGjEmC,YACMnC,KAAKoI,eAAeG,cAAcvI,KAAKoI,gBCpKxC,MAAMI,GAAU,CACrB,QACA,UACA,UACA,QACA,UACA,aACA,UACA,YACA,WACA,UACA,cACA,WACA,SACA,MACA,MACA,MACA,MACA,gBACA,eACA,OACA,OACA,OACA,OACA,gBACA,WACA,WACA,YACA,UACA,SACA,UACA,WACA,WACA,WACA,UACA,aACA,UACA,aACA,YACA,WACA,YACA,WACA,WACA,eACA,YACA,WACA,YACA,WACA,gBACA,YACA,kBACA,aACA,aACA,WACA,WACA,YACA,kBACA,aACA,cACA,eACA,YACA,WACA,YACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,UACA,aACA,cACA,WACA,eACA,aACA,cACA,aACA,gBACA,gBACA,gBACA,gBACA,gBChGIC,GAAmB,GCMlB,MAAMC,GAAe,CAC1BrH,EACAoC,KAEA,MAAMnC,EAAUoB,GACdrB,GACAsH,IACKrH,IAAYqH,IACbtE,QAAQC,IAAI,uBAAwBqE,EAAStH,QAAQyB,QAAS,UAAW6F,EAAStL,SAClF5F,EAAMkK,IAAI,CAAEI,MAAO4G,EAAStH,QAAQyB,QAASzF,QAASsL,EAAStL,aAGnEoG,GAGIhM,EDLR,SAAkBmC,EAAOgP,EAAQnS,GAC7B,IAAIoS,EACJ,MAAMC,EAAc,GACpB,SAASnH,EAAIoH,GACT,GAAI3R,EAAewC,EAAOmP,KACtBnP,EAAQmP,EACJF,GAAM,CACN,MAAMG,GAAaP,GAAiB3M,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAIiN,EAAYhN,OAAQD,GAAK,EAAG,CAC5C,MAAM8G,EAAImG,EAAYjN,GACtB8G,EAAE,KACF8F,GAAiB5Q,KAAK8K,EAAG/I,GAE7B,GAAIoP,EAAW,CACX,IAAK,IAAInN,EAAI,EAAGA,EAAI4M,GAAiB3M,OAAQD,GAAK,EAC9C4M,GAAiB5M,G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"}